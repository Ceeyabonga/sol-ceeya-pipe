AWSTemplateFormatVersion: 2010-09-09
Description: Create a library and the logging Bucket
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Tagging:"
        Parameters:
          - Name
          - TECSYSTEM
          - TECENVIRONMENT
          - BUSOU
          - TECAPPLICATIONROLE
          - BUSOWNER
          - BUSPROJECT
          - BUSPRODUCT
          - AUTOLIFETIME
    ParameterLabels:
      TECSYSTEM:
        default: Enter system tag.
      TECENVIRONMENT:
        default: Select operating environment.
      BUSOU:
        default: OU that this service belongs to.
      Name:
        default: System Name.
      TECAPPLICATIONROLE:
        default: Function of the resource.
      BUSOWNER:
        default: email address in lower case.
      BUSPROJECT:
        default: Project that the resource belongs to.
      BUSPRODUCT:
        default: Product related to this resource.
      AUTOLIFETIME:
        default: Is the resource temporary or Permanent.
Parameters:
  BucketName1:
    Type: String
    Default: al-xhosa-ire-scriptlib
  LoggingBucketName:
    Type: String
    Default: al-xhosa-ire-s3-logs
  InventoryBucketArn:
    Type: String
    Description: Bucket for storing inventory
    ConstraintDescription: must be an arn of an existing bucket.
    Default: "arn:aws:s3:::al-xhosa-sol-ceeya-inventory"
  TECSYSTEM:
    Type: String
    Default: NETWORK
  TECENVIRONMENT:
    Type: String
    AllowedValues:
      - CT-DEV
      - CT-CORE
      - CT-SHARED
      - CT-STAGING
    ConstraintDescription: must be a valid environment.
    Default: CT-DEV
  Name:
    Type: String
    Default: S3BUCKET_STACK
  BUSOU:
    Type: String
    Default: DEV-OU
  TECAPPLICATIONROLE:
    Type: String
    Default: OPS_DATA
  BUSOWNER:
    Type: String
    Default: ceeya@al.co.za
  BUSPROJECT:
    Type: String
    Default: CT_OPS
  BUSPRODUCT:
    Type: String
    Default: S3_BUCKETS
  AUTOLIFETIME:
    Type: String
    Default: PERMANENT
Resources:
  S3Bucket1:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName1
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref LoggingBucket
      AnalyticsConfigurations:
        - Id: AnalyticsConfigurationId
          StorageClassAnalysis:
            DataExport:
              Destination:
                BucketArn: !Ref InventoryBucketArn
                Format: CSV
                Prefix: AnalyticsDestinationPrefix
              OutputSchemaVersion: V_1
          Prefix: AnalyticsConfigurationPrefix
          TagFilters:
            - Key: AnalyticsTagKey
              Value: AnalyticsTagValue
      InventoryConfigurations:
        - Id: InventoryConfigurationId
          Destination:
            BucketArn: !Ref InventoryBucketArn
            Format: CSV
            Prefix: InventoryDestinationPrefix
          Enabled: "true"
          IncludedObjectVersions: Current
          Prefix: InventoryConfigurationPrefix
          ScheduleFrequency: Weekly
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: TECENVIRONMENT
          Value: !Ref TECENVIRONMENT
        - Key: TECAPPLICATIONROLE
          Value: !Ref TECAPPLICATIONROLE
        - Key: TECSYSTEM
          Value: !Ref TECSYSTEM
        - Key: BUSOU
          Value: !Ref BUSOU
        - Key: BUSOWNER
          Value: !Ref BUSOWNER
        - Key: BUSPROJECT
          Value: !Ref BUSPROJECT
        - Key: BUSPRODUCT
          Value: !Ref BUSPRODUCT
        - Key: AUTOLIFETIME
          Value: !Ref AUTOLIFETIME
  LoggingBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref LoggingBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: "true"
        BlockPublicPolicy: "true"
        RestrictPublicBuckets: "true"
      AccessControl: LogDeliveryWrite
Outputs:
  Bucket:
    Value: !GetAtt
      - S3Bucket1
      - Arn
    Export:
      Name: !Sub "${BucketName1}"
  Bucket2:
    Value: !GetAtt
      - LoggingBucket
      - Arn
    Export:
      Name: !Sub "${LoggingBucketName}"
